<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <system.serviceModel>

    <services>
      <service behaviorConfiguration="ServiceCredentialsBehavior" 
               name="Service.DataTransferService">
        <endpoint address="" 
                  binding="wsHttpBinding" 
                  bindingConfiguration="MessageAndUserName"
                  name="SecuredByMessageEndpointSelfHost" 
                  contract="Service.IContract">
          <identity>
            <userPrincipalName value="Compaq\User" />
          </identity>
        </endpoint>
        <host>
          <baseAddresses>
            <add baseAddress="https://127.0.0.1:4000/" />
          </baseAddresses>
        </host>
      </service>
    </services>
     
    <bindings>
      <wsHttpBinding>
        <binding name="MessageAndUserName">
          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="UserName"  />  <!--negotiateServiceCredential="false"-->
            <transport clientCredentialType="Certificate"  />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
        

    <behaviors>
      <serviceBehaviors>
        <behavior name="ServiceCredentialsBehavior">
          <serviceCredentials>
            <!--<clientCertificate>
              <certificate findValue="" />
              <authentication certificateValidationMode="None" />
            </clientCertificate>-->
            <serviceCertificate findValue="ServiceModelSamples-HTTPS-Server" 
                                storeLocation="LocalMachine"
                                storeName="My" 
                                x509FindType="FindBySubjectName" />
            <userNameAuthentication userNamePasswordValidationMode="Custom"
              customUserNamePasswordValidatorType="Service.CustomUserNameValidator, Service" />
          </serviceCredentials>
          <serviceMetadata  httpsGetEnabled="true" httpGetEnabled="false" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>

  </system.serviceModel>
</configuration>

<!--<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <system.serviceModel>

    --><!--Свойство HttpGetEnabled поведения ServiceMetadataBehavior 
    имеет значение true и свойство HttpGetUrl является относительным 
    адресом, однако отсутствует базовый http-адрес.  Предоставьте базовый 
    http-адрес или установите HttpGetUrl на абсолютный адрес.--><!--
      
        
    <services>
      <service name="Service.DataTransferService" behaviorConfiguration="ServiceCredentialsBehavior"  >
                <endpoint address="http://localhost:4000/"
                          binding="wsHttpBinding" 
                          bindingConfiguration="UsernameWithTransport"
                          name="Endpoint" 
                          contract="Service.IContract" />
            </service>
      --><!--<service behaviorConfiguration="ServiceCredentialsBehavior" 
               name="Service.DataTransferService">
        
        <endpoint address="" 
                  binding="wsHttpBinding" 
                  bindingConfiguration="MessageAndUserName"            
                  name="SecuredByMessageEndpointWSH"
                  contract="Service.IContract">          
        </endpoint>
        --><!--<endpoint address="mex"
                binding="mexHttpBinding"
                contract="Service.IContract" />--><!--
        <host>
          <baseAddresses>
            <add baseAddress="https://localhost:8080/" />
          </baseAddresses>
        </host>
      </service>--><!--
    </services>
     
    <bindings>
      <wsHttpBinding>
        <binding name="UsernameWithTransport">
                    <security mode="Message">
                        <message clientCredentialType="UserName" />
                    </security>
                </binding>
        --><!--<binding name="MessageAndUserName">
          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="UserName"  />
            <transport clientCredentialType="Basic" /> 
            --><!--negotiateServiceCredential="false"--><!--
          </security>
        </binding>--><!--
      </wsHttpBinding>
    </bindings>
        

    <behaviors>
      <serviceBehaviors>
        <behavior name="ServiceCredentialsBehavior">          
          <serviceCredentials>
            
            <clientCertificate>
              <certificate  findValue="cert4" storeLocation="CurrentUser" x509FindType="FindBySubjectName"/>
              <authentication  certificateValidationMode="None" />
            </clientCertificate>
            <serviceCertificate findValue="cert4" 
                                storeLocation="CurrentUser"
                                storeName="My" 
                                x509FindType="FindBySubjectName" />
            <userNameAuthentication userNamePasswordValidationMode="Custom"
              customUserNamePasswordValidatorType="Service.CustomUserNameValidator, Service" />
          </serviceCredentials>
          --><!--<serviceMetadata  httpsGetEnabled="True" httpGetEnabled="false" httpsGetUrl="https://localhost:8080/" />--><!--
          <serviceDebug includeExceptionDetailInFaults="False" />
        </behavior>
      </serviceBehaviors>
        
    </behaviors>

  </system.serviceModel>
</configuration>-->